{"ast":null,"code":"import _slicedToArray from \"/Users/matthew.emersonibm.com/NFLDraftApp/clinet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matthew.emersonibm.com/NFLDraftApp/clinet/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport axios from 'axios';\nimport './App.css';\nimport ClickyButtonState from './clicky-button-state';\nimport ClickyButtonProps from './clicky-button-props';\nimport MainAppScreen from './components/main-screen';\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        teams = _useState2[0],\n        setTeams = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        users = _useState4[0],\n        setUsers = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        buttonClicks = _useState6[0],\n        setButtonClicks = _useState6[1];\n\n  useEffect(() => {\n    async function fetchRosters() {\n      try {\n        const response = await axios.get(\"\".concat(origin, \"/api/v1/rosters\"));\n        console.log(response);\n        setTeams(response.data.rows[0].team_name);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    async function fetchUsers() {\n      try {\n        const response = await axios.get(\"\".concat(origin, \"/api/v1/users\"));\n        console.log(response);\n        setUsers(response.data.rows[0].user_name);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchUsers();\n    fetchRosters();\n  });\n  const teamPanel = teams ? React.createElement(\"div\", {\n    className: \"team-names\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, teams) : null;\n  const userPanel = users ? React.createElement(\"div\", {\n    className: \"user-names\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, users) : null;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, users, teams, teamPanel, userPanel, React.createElement(ClickyButtonState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(ClickyButtonProps, {\n    setButtonClicks: setButtonClicks,\n    buttonClicks: buttonClicks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), buttonClicks);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthew.emersonibm.com/NFLDraftApp/clinet/src/App.js"],"names":["React","useState","useEffect","axios","ClickyButtonState","ClickyButtonProps","MainAppScreen","App","teams","setTeams","users","setUsers","buttonClicks","setButtonClicks","fetchRosters","response","get","origin","console","log","data","rows","team_name","err","error","fetchUsers","user_name","teamPanel","userPanel"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaN,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,QACNO,KADM;AAAA,QACCC,QADD;;AAAA,qBAEaR,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,QAENS,KAFM;AAAA,QAECC,QAFD;;AAAA,qBAG2BV,QAAQ,CAAC,CAAD,CAHnC;AAAA;AAAA,QAGNW,YAHM;AAAA,QAGQC,eAHR;;AAObX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,YAAf,GAA8B;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,WAAaC,MAAb,qBAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAN,QAAAA,QAAQ,CAACM,QAAQ,CAACK,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBC,SAAvB,CAAR;AACD,OAJD,CAIE,OAAMC,GAAN,EAAW;AACXL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACD;AACF;;AACD,mBAAeE,UAAf,GAA4B;AAC1B,UAAI;AACF,cAAMV,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,WAAaC,MAAb,mBAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAJ,QAAAA,QAAQ,CAACI,QAAQ,CAACK,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBK,SAAvB,CAAR;AACD,OAJD,CAIE,OAAMH,GAAN,EAAW;AACXL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACD;AACF;;AACDE,IAAAA,UAAU;AACVX,IAAAA,YAAY;AACb,GArBQ,CAAT;AAuBA,QAAMa,SAAS,GAAGnB,KAAK,GACtB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KADF,CADsB,GAInB,IAJJ;AAMA,QAAMoB,SAAS,GAAGlB,KAAK,GACtB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KADF,CADsB,GAInB,IAJJ;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,EAEKF,KAFL,EAGKmB,SAHL,EAIKC,SAJL,EAMI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,iBAAD;AAAmB,IAAA,eAAe,EAAEf,eAApC;AAAqD,IAAA,YAAY,EAAED,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQKA,YARL,CADF;AAYD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport axios from 'axios';\nimport './App.css';\nimport ClickyButtonState from './clicky-button-state'\nimport ClickyButtonProps from './clicky-button-props'\nimport MainAppScreen from './components/main-screen'\n\nfunction App() {\n  const [teams, setTeams] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [buttonClicks, setButtonClicks] = useState(0);\n  \n\n\n  useEffect(() => {\n    async function fetchRosters() {\n      try {\n        const response = await axios.get(`${origin}/api/v1/rosters`);\n        console.log(response)\n        setTeams(response.data.rows[0].team_name)\n      } catch(err) {\n        console.error(err) \n      }\n    }\n    async function fetchUsers() {\n      try {\n        const response = await axios.get(`${origin}/api/v1/users`);\n        console.log(response)        \n        setUsers(response.data.rows[0].user_name)\n      } catch(err) {\n        console.error(err)\n      }\n    }\n    fetchUsers()\n    fetchRosters()\n  });\n\n  const teamPanel = teams ?\n  (<div className=\"team-names\">\n    {teams}\n    </div>)\n    : null\n\n  const userPanel = users ?\n  (<div className=\"user-names\">\n    {users}\n    </div>)\n    : null\n\n  return (\n    <div className=\"App\">\n        {users}\n        {teams}\n        {teamPanel}\n        {userPanel}\n        {/* <MainAppScreen /> */}\n        <ClickyButtonState />\n        <ClickyButtonProps setButtonClicks={setButtonClicks} buttonClicks={buttonClicks} />\n        {buttonClicks}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}