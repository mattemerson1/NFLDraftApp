{"ast":null,"code":"import _slicedToArray from \"/Users/matthew.emersonibm.com/NFLDraftApp/clinet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matthew.emersonibm.com/NFLDraftApp/clinet/src/components/main-screen.js\";\nimport React, { useState, useEffect } from 'react';\nimport './main-screen.css';\nimport apiRequests from '../utils/apiRequests';\n\nconst MainAppScreen = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        teams = _useState2[0],\n        setTeams = _useState2[1];\n\n  console.log(teams);\n  useEffect(() => {\n    async function fetchRoster() {\n      try {\n        const response = await apiRequests.getRoster();\n        console.log(response); // for (var i = 0; i < rows.length; i++)\n\n        setTeams(response.data.rows.map(team => team.team_name)); // setTeams(response.data.rows[2].team_name)\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchRoster();\n  });\n  const teamPanel = teams ? teams.map(team => {// return <div className=\"team-names\"> {team} </div>\n  }) : null;\n  return React.createElement(\"div\", {\n    className: \"rosters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, teamPanel);\n};\n\nexport default MainAppScreen;","map":{"version":3,"sources":["/Users/matthew.emersonibm.com/NFLDraftApp/clinet/src/components/main-screen.js"],"names":["React","useState","useEffect","apiRequests","MainAppScreen","teams","setTeams","console","log","fetchRoster","response","getRoster","data","rows","map","team","team_name","err","error","teamPanel"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBAEEH,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAEjBI,KAFiB;AAAA,QAEVC,QAFU;;AAIxBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeO,WAAf,GAA6B;AACzB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMP,WAAW,CAACQ,SAAZ,EAAvB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ,EAFA,CAGA;;AACAJ,QAAAA,QAAQ,CAACI,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,GAAnB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,SAApC,CAAD,CAAR,CAJA,CAKA;AACH,OAND,CAME,OAAMC,GAAN,EAAW;AACTV,QAAAA,OAAO,CAACW,KAAR,CAAcD,GAAd;AACH;AACJ;;AACLR,IAAAA,WAAW;AACV,GAbQ,CAAT;AAcA,QAAMU,SAAS,GAAGd,KAAK,GAAGA,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAI,CACxC;AACH,GAFyB,CAAH,GAGrB,IAHF;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECI,SAFD,CADJ;AAMH,CA/BD;;AAiCA,eAAef,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './main-screen.css';\nimport apiRequests from '../utils/apiRequests';\n\nconst MainAppScreen = () => {\n\n    const [teams, setTeams] = useState(\"\");\n\n    console.log(teams);\n\n    useEffect(() => {\n        async function fetchRoster() {\n            try {\n                const response = await apiRequests.getRoster();\n                console.log(response)\n                // for (var i = 0; i < rows.length; i++)\n                setTeams(response.data.rows.map(team => team.team_name))\n                // setTeams(response.data.rows[2].team_name)\n            } catch(err) {\n                console.error(err)\n            }\n        }\n    fetchRoster()\n    });\n    const teamPanel = teams ? teams.map(team => {\n        // return <div className=\"team-names\"> {team} </div>\n    })\n    : null\n\n    return (\n        <div className=\"rosters\">\n        {/* {teams} */}\n        {teamPanel}\n        </div>\n    );\n}\n\nexport default MainAppScreen;"]},"metadata":{},"sourceType":"module"}