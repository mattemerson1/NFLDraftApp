{"ast":null,"code":"import _slicedToArray from \"/Users/matthew.emersonibm.com/NFLDraftApp/clinet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matthew.emersonibm.com/NFLDraftApp/clinet/src/components/main-screen.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // import './main-app-screen.scss';\n\nimport apiRequests from '../utils/apiRequests';\n\nconst MainAppScreen = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        teams = _useState2[0],\n        setTeams = _useState2[1]; // useEffect(() => {\n  // const [teams, setTeams] = useState(\"\");\n\n\n  async function fetchRosters() {\n    try {\n      const response = await axios.get(\"\".concat(origin, \"/api/v1/rosters\"));\n      setTeams(response.data.rows[1].team_name);\n    } catch (err) {\n      console.error(err);\n    } // }\n\n\n    fetchRosters();\n  }\n\n  ;\n  const rost = fetchRosters();\n  const teamPanel = teams ? React.createElement(\"div\", {\n    className: \"team-names\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, teams) : null; // process.stdout.write(teamPanel)\n  // process.stdout.write({teamPanel})\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, teamPanel, \"test\", rost, teams); // const teamPanel = teams ?\n  // (<div className=\"team-names\">\n  // {teams}\n  // </div>)\n  // : null\n  // })\n  // fetchRosters();\n  // return (\n  //     <div className=\"App\">\n  //         {teamPanel}\n  //         test\n  //         {teams}\n  //         {/* {userPanel} */}\n  //         </div>\n  // );\n};\n\nexport default MainAppScreen;","map":{"version":3,"sources":["/Users/matthew.emersonibm.com/NFLDraftApp/clinet/src/components/main-screen.js"],"names":["React","useState","useEffect","axios","apiRequests","MainAppScreen","teams","setTeams","fetchRosters","response","get","origin","data","rows","team_name","err","console","error","rost","teamPanel"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBAEEJ,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAEjBK,KAFiB;AAAA,QAEVC,QAFU,kBAIxB;AACI;;;AACJ,iBAAeC,YAAf,GAA8B;AAC9B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,WAAaC,MAAb,qBAAvB;AACAJ,MAAAA,QAAQ,CAACE,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBC,SAAvB,CAAR;AACH,KAHD,CAGE,OAAMC,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACC,KANyB,CAO1B;;;AACJP,IAAAA,YAAY;AAEX;;AAAA;AAEG,QAAMU,IAAI,GAAGV,YAAY,EAAzB;AAEA,QAAMW,SAAS,GAAGb,KAAK,GACtB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACAA,KADA,CADsB,GAIrB,IAJF,CApBoB,CAyBpB;AACA;;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKa,SADL,UAGKD,IAHL,EAIKZ,KAJL,CADJ,CA5BoB,CAsCpB;AACA;AACA;AACA;AACA;AACJ;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIP,CAzDD;;AA2DA,eAAeD,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import './main-app-screen.scss';\nimport apiRequests from '../utils/apiRequests';\n\nconst MainAppScreen = () => {\n\n    const [teams, setTeams] = useState(\"\");\n\n    // useEffect(() => {\n        // const [teams, setTeams] = useState(\"\");\n    async function fetchRosters() {\n    try {\n        const response = await axios.get(`${origin}/api/v1/rosters`);\n        setTeams(response.data.rows[1].team_name)\n    } catch(err) {\n        console.error(err) \n        }\n        // }\n    fetchRosters();\n\n    };\n        \n        const rost = fetchRosters();\n\n        const teamPanel = teams ?\n        (<div className=\"team-names\">\n        {teams}\n        </div>)\n        : null\n        // process.stdout.write(teamPanel)\n        // process.stdout.write({teamPanel})\n\n        return (\n            <div className=\"App\">\n                {teamPanel}\n                test\n                {rost}\n                {teams}\n                {/* {userPanel} */}\n            </div>\n        );\n\n        // const teamPanel = teams ?\n        // (<div className=\"team-names\">\n        // {teams}\n        // </div>)\n        // : null\n    // })\n    // fetchRosters();\n\n        // return (\n        //     <div className=\"App\">\n        //         {teamPanel}\n        //         test\n        //         {teams}\n        //         {/* {userPanel} */}\n        //         </div>\n        // );\n\n    \n\n}\n\nexport default MainAppScreen;"]},"metadata":{},"sourceType":"module"}