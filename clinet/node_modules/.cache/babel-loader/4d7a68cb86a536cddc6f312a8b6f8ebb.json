{"ast":null,"code":"import axios from 'axios';\nimport { origin } from '../config';\n\nconst getPerson = async id => {\n  try {\n    const response = await axios.get(\"\".concat(origin, \"/api/v1/persons/\").concat(id));\n    return response;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getRoster = async () => {\n  try {\n    const response = await axios.get(\"\".concat(origin, \"/api/v1/rosters\"));\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst getRosterPlayers = async id => {\n  try {\n    const response = await axios.get(\"\".concat(origin, \"/api/v1/rosters/\").concat(id, \"/players\"));\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nasync function fetchRosters() {\n  try {\n    const response = await axios.get(\"\".concat(origin, \"/api/v1/rosters\"));\n    setTeams(response.data.rows[1].team_name);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\n;\nexport default {\n  getRoster,\n  getRosterPlayers,\n  fetchRosters,\n  getPerson\n};","map":{"version":3,"sources":["/Users/matthew.emersonibm.com/NFLDraftApp/clinet/src/utils/apiRequests.js"],"names":["axios","origin","getPerson","id","response","get","err","getRoster","console","error","getRosterPlayers","fetchRosters","setTeams","data","rows","team_name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,WAAvB;;AAGI,MAAMC,SAAS,GAAG,MAAOC,EAAP,IAAc;AAC5B,MAAI;AACJ,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,WAAaJ,MAAb,6BAAsCE,EAAtC,EAAvB;AACA,WAAOC,QAAP;AACC,GAHD,CAGE,OAAOE,GAAP,EAAY;AACd,UAAMA,GAAN;AACC;AACJ,CAPD;;AASF,MAAMC,SAAS,GAAG,YAAY;AAC1B,MAAI;AACA,UAAMH,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,WAAaJ,MAAb,qBAAvB;AACA,WAAOG,QAAP;AACH,GAHD,CAGE,OAAME,GAAN,EAAW;AACTE,IAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACH;AACJ,CAPD;;AASA,MAAMI,gBAAgB,GAAG,MAAOP,EAAP,IAAc;AACnC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,WAAaJ,MAAb,6BAAsCE,EAAtC,cAAvB;AACA,WAAOC,QAAP;AACH,GAHD,CAGE,OAAME,GAAN,EAAW;AACTE,IAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACH;AACJ,CAPD;;AAUA,eAAeK,YAAf,GAA8B;AAC5B,MAAI;AACF,UAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,WAAaJ,MAAb,qBAAvB;AACAW,IAAAA,QAAQ,CAACR,QAAQ,CAACS,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBC,SAAvB,CAAR;AACD,GAHD,CAGE,OAAMT,GAAN,EAAW;AACXE,IAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACD;AACF;;AAAA;AAEH,eAAe;AACXC,EAAAA,SADW;AAEXG,EAAAA,gBAFW;AAGXC,EAAAA,YAHW;AAIXT,EAAAA;AAJW,CAAf","sourcesContent":["import axios from 'axios';\n\nimport { origin } from '../config'\n\n\n    const getPerson = async (id) => {\n        try {\n        const response = await axios.get(`${origin}/api/v1/persons/${id}`);\n        return response;\n        } catch (err) {\n        throw err;\n        }\n    };\n\n  const getRoster = async () => {\n      try {\n          const response = await axios.get(`${origin}/api/v1/rosters`);\n          return response\n      } catch(err) {\n          console.error(err)\n      }\n  };\n\n  const getRosterPlayers = async (id) => {\n      try {\n          const response = await axios.get(`${origin}/api/v1/rosters/${id}/players`);\n          return response\n      } catch(err) {\n          console.error(err)\n      }\n  };\n\n\n  async function fetchRosters() {\n    try {\n      const response = await axios.get(`${origin}/api/v1/rosters`);\n      setTeams(response.data.rows[1].team_name)\n    } catch(err) {\n      console.error(err) \n    }\n  };\n\nexport default {\n    getRoster,\n    getRosterPlayers,\n    fetchRosters,\n    getPerson\n}"]},"metadata":{},"sourceType":"module"}